"""empty message

Revision ID: e9bebaa78d7a
Revises: 01e5e8fed13e
Create Date: 2020-07-10 09:24:00.701564

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e9bebaa78d7a'
down_revision = '01e5e8fed13e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('albums', sa.Column('duration', sa.DateTime(), nullable=True))
    op.add_column('albums', sa.Column('release_date', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_albums_release_date'), 'albums', ['release_date'], unique=False)
    op.add_column('books', sa.Column('release_date', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_books_release_date'), 'books', ['release_date'], unique=False)
    op.add_column('tracks', sa.Column('uploader_id', sa.Integer(), nullable=True))
    op.drop_constraint('tracks_user_id_fkey', 'tracks', type_='foreignkey')
    op.create_foreign_key(None, 'tracks', 'users', ['uploader_id'], ['id'])
    op.drop_column('tracks', 'producers')
    op.drop_column('tracks', 'song_writers')
    op.drop_column('tracks', 'user_id')
    op.drop_column('tracks', 'featured_artists')
    op.add_column('user_album', sa.Column('role_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'user_album', 'roles', ['role_id'], ['id'])
    op.add_column('user_books', sa.Column('role_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'user_books', 'roles', ['role_id'], ['id'])
    op.add_column('user_tracks', sa.Column('role_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'user_tracks', 'roles', ['role_id'], ['id'])
    op.drop_column('user_tracks', 'created_at')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_tracks', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'user_tracks', type_='foreignkey')
    op.drop_column('user_tracks', 'role_id')
    op.drop_constraint(None, 'user_books', type_='foreignkey')
    op.drop_column('user_books', 'role_id')
    op.drop_constraint(None, 'user_album', type_='foreignkey')
    op.drop_column('user_album', 'role_id')
    op.add_column('tracks', sa.Column('featured_artists', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True))
    op.add_column('tracks', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('tracks', sa.Column('song_writers', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True))
    op.add_column('tracks', sa.Column('producers', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'tracks', type_='foreignkey')
    op.create_foreign_key('tracks_user_id_fkey', 'tracks', 'users', ['user_id'], ['id'])
    op.drop_column('tracks', 'uploader_id')
    op.drop_index(op.f('ix_books_release_date'), table_name='books')
    op.drop_column('books', 'release_date')
    op.drop_index(op.f('ix_albums_release_date'), table_name='albums')
    op.drop_column('albums', 'release_date')
    op.drop_column('albums', 'duration')
    # ### end Alembic commands ###
